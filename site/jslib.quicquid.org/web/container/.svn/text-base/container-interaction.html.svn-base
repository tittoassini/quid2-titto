<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
 - Copyright (C) 2010 Google Inc.
 -
 - Licensed under the Apache License, Version 2.0 (the "License");
 - you may not use this file except in compliance with the License.
 - You may obtain a copy of the License at
 -
 -      http://www.apache.org/licenses/LICENSE-2.0
 -
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS,
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 - See the License for the specific language governing permissions and
 - limitations under the License.
-->

<!-- This should be kept in sync with the InteractingModulesExample wiki page.
     TODO(kpreid): At least, that used to be true. The info on that page is tied
     to the old, explicit forms of loading Caja. What should we do now? -->

<html>
  <head>
    <title>Caja interacting gadgets example</title>
    
    <style type="text/css">
      table { border-collapse: collapse; }
      td { border: 1px solid black; padding: 1em; }
    </style>
    
    <script src="http://caja.appspot.com/caja.js" type="text/javascript" >
    </script>
    <script src="gadget-library.js" type="text/javascript" ></script>
  </head>
  <body>
    <h1>Interacting Gadgets Example</h1>
    
    <p>This host page loads two gadgets (which should appear in the table below) and provides the left gadget a function "set", and the right gadget "get", by which they can communicate.</p>
    
    <table>
      <tr>
        <th>Writes</th>
        <th>Reads</th>
      </tr>
      <tr>
        <td><div id="gadget1"></div></td>
        <td><div id="gadget2"></div></td>
      </tr>
    </table>
    <script type="text/javascript">
        // Prepare the Caja library.
        // This is an asynchronous load because it constructs an iframe which
        // all the sandbox stuff is hidden in, so you have to provide a 
        // callback.
        caja.configure({
          cajaServer: "http://caja.appspot.com/"
        }, function (frameGroup) {
          // Some state to share between the gadgets
          // The functions must be explicitly marked as safe to the Caja runtime
          // because this is not cajoled code as in a module.
          var shared = (function (x) {
            return { 
                get: frameGroup.markFunction(function () { return x; }),
                set: frameGroup.markFunction(function (y) { x = String(y); })
              };
          })("");

          function loadGadget(mid, elem, extraOuters) {
            // Specify the DOM node which is the virtual <body> of the gadget
            frameGroup.makeES5Frame(elem,
                { /* Grant this gadget no network access */ },
                function (frame) {
                  // Load and run the gadget
                  frame.url(mid)
                  // granting it extra powers to talk to the other gadget
                       .run(extraOuters);
                });
          }
          loadGadget("gadget-set.html",
              document.getElementById("gadget1"),
              { set: frameGroup.tame(shared.set) });

          loadGadget("gadget-get.html",
              document.getElementById("gadget2"),
              { get: frameGroup.tame(shared.get) });
        });     
    </script>
    <p>See comments in the source of this page for more information.</p>

  </body>
</html>
