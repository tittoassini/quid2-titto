goog.provide('quid2.module.Data.Word32.Hash_19d6dba3dd9393c75998c30bc7197ed16e32479e785b116cdf927427c4460e0f');
goog.require('quid2.std');
goog.require('quid2.module.Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152');

quid2.module.Data.Word32.Hash_19d6dba3dd9393c75998c30bc7197ed16e32479e785b116cdf927427c4460e0f = (function () {
var s = quid2.std;
/*
eqWord32::Word32 -> Word32 -> Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152.Bool
neWord32::Word32 -> Word32 -> Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152.Bool
leWord32::Word32 -> Word32 -> Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152.Bool
geWord32::Word32 -> Word32 -> Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152.Bool
ltWord32::Word32 -> Word32 -> Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152.Bool
gtWord32::Word32 -> Word32 -> Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152.Bool
plusWord32::Word32 -> Word32 -> Word32
minusWord32::Word32 -> Word32 -> Word32
negateWord32::Word32 -> Word32
timesWord32::Word32 -> Word32 -> Word32
absWord32::Word32 -> Word32
signumWord32::Word32 -> Word32
quotWord32::Word32 -> Word32 -> Word32
remWord32::Word32 -> Word32 -> Word32
divWord32::Word32 -> Word32 -> Word32
modWord32::Word32 -> Word32 -> Word32
quotRemWord32::Word32 -> Word32 -> (Word32,Word32)
divModWord32::Word32 -> Word32 -> (Word32,Word32)
toIntegerWord32::Word32 -> Integer
fromIntegerWord32::Integer -> Word32
*/
return s.defs("Data.Word32.Hash_19d6dba3dd9393c75998c30bc7197ed16e32479e785b116cdf927427c4460e0f",{fromIntegerWord32:[2,3,2,19,11,0],toIntegerWord32:[2,3,2,11,19,0],divModWord32:[2,3,2,11,2,3,2,11,2,4,2,2,11,11,0,0,0],quotRemWord32:[2,3,2,11,2,3,2,11,2,4,2,2,11,11,0,0,0],modWord32:[2,3,2,11,2,3,2,11,11,0,0],divWord32:[2,3,2,11,2,3,2,11,11,0,0],remWord32:[2,3,2,11,2,3,2,11,11,0,0],quotWord32:[2,3,2,11,2,3,2,11,11,0,0],signumWord32:[2,3,2,11,11,0],absWord32:[2,3,2,11,11,0],timesWord32:[2,3,2,11,2,3,2,11,11,0,0],negateWord32:[2,3,2,11,11,0],minusWord32:[2,3,2,11,2,3,2,11,11,0,0],plusWord32:[2,3,2,11,2,3,2,11,11,0,0],gtWord32:[2,3,2,11,2,3,2,11,0,0,79,68,97,116,97,46,66,111,111,108,46,72,97,115,104,95,53,100,49,48,49,102,102,51,54,57,101,57,56,56,49,53,100,99,100,101,100,53,52,49,54,51,97,99,52,101,102,100,54,53,55,56,98,50,52,98,102,101,100,53,101,102,52,99,56,54,55,55,48,53,53,98,97,98,98,55,51,49,53,50,0,0,4,66,111,111,108,0,0,0],ltWord32:[2,3,2,11,2,3,2,11,0,0,79,68,97,116,97,46,66,111,111,108,46,72,97,115,104,95,53,100,49,48,49,102,102,51,54,57,101,57,56,56,49,53,100,99,100,101,100,53,52,49,54,51,97,99,52,101,102,100,54,53,55,56,98,50,52,98,102,101,100,53,101,102,52,99,56,54,55,55,48,53,53,98,97,98,98,55,51,49,53,50,0,0,4,66,111,111,108,0,0,0],geWord32:[2,3,2,11,2,3,2,11,0,0,79,68,97,116,97,46,66,111,111,108,46,72,97,115,104,95,53,100,49,48,49,102,102,51,54,57,101,57,56,56,49,53,100,99,100,101,100,53,52,49,54,51,97,99,52,101,102,100,54,53,55,56,98,50,52,98,102,101,100,53,101,102,52,99,56,54,55,55,48,53,53,98,97,98,98,55,51,49,53,50,0,0,4,66,111,111,108,0,0,0],leWord32:[2,3,2,11,2,3,2,11,0,0,79,68,97,116,97,46,66,111,111,108,46,72,97,115,104,95,53,100,49,48,49,102,102,51,54,57,101,57,56,56,49,53,100,99,100,101,100,53,52,49,54,51,97,99,52,101,102,100,54,53,55,56,98,50,52,98,102,101,100,53,101,102,52,99,56,54,55,55,48,53,53,98,97,98,98,55,51,49,53,50,0,0,4,66,111,111,108,0,0,0],neWord32:[2,3,2,11,2,3,2,11,0,0,79,68,97,116,97,46,66,111,111,108,46,72,97,115,104,95,53,100,49,48,49,102,102,51,54,57,101,57,56,56,49,53,100,99,100,101,100,53,52,49,54,51,97,99,52,101,102,100,54,53,55,56,98,50,52,98,102,101,100,53,101,102,52,99,56,54,55,55,48,53,53,98,97,98,98,55,51,49,53,50,0,0,4,66,111,111,108,0,0,0],eqWord32:[2,3,2,11,2,3,2,11,0,0,79,68,97,116,97,46,66,111,111,108,46,72,97,115,104,95,53,100,49,48,49,102,102,51,54,57,101,57,56,56,49,53,100,99,100,101,100,53,52,49,54,51,97,99,52,101,102,100,54,53,55,56,98,50,52,98,102,101,100,53,101,102,52,99,56,54,55,55,48,53,53,98,97,98,98,55,51,49,53,50,0,0,4,66,111,111,108,0,0,0]},{},[quid2.module.Data.Bool.Hash_5d101ff369e98815dcded54163ac4efd6578b24bfed5ef4c8677055babb73152]);
})();
